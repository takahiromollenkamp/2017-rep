import java.awt.*;
import java.awt.event.*;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;

public class PlayFlap extends Core implements KeyListener {
	public static void main(String[] args) {
		/*new java.util.Timer().schedule( 
		        new java.util.TimerTask() {
		            @Override
		            public void run() {
		            	System.exit(0);
		              
		            }
		        }, 
		        15000
		);*/
		new PlayFlap().run();
	}
	private Bird trump;
	private Rectangle[] rect;
	private int rectCount;
	private long time;
	private int screenLength;
	private long spaceTime;
	
	public synchronized void draw(Graphics2D g) {
		g.clearRect(0,0,1000,1000);
		g.fillRect(0, 0, 20, 20);
		
		
		BufferedImage buffered = (BufferedImage) trump.getImage();;
		int drawLocationX = Math.round(trump.getX());
		int drawLocationY = Math.round(trump.getY());
		double rotationRequired = trump.getAngle();
		double locationX = buffered.getWidth() / 2;
		double locationY = buffered.getHeight() / 2;
		AffineTransform tx = AffineTransform.getRotateInstance(rotationRequired, locationX, locationY);
		AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_BILINEAR);
		g.drawImage(op.filter(buffered, null), drawLocationX, drawLocationY, null);
		
		for(int i=0;i<5; i++){
			if(rect[i].isVisible()){
				double r=rect[i].lowBound();
				int low=(int)(r*screenLength);
				double r2=r+.2;
				int high=(int)(r2*screenLength);
				
				
				g.fillRect(Math.round(rect[i].getX()),high , 40,(screenLength-high));
				g.fillRect(Math.round(rect[i].getX()),0 , 40,low);
				
				
				
			}
		}
		
		
	}
	public void update(long timePassed){
		trump.update(timePassed);
		for(int i=0;i<5;i++){
			rect[i].update(timePassed);
		}
		if(System.currentTimeMillis()-time>1500){
			rect[rectCount%5].activate();
			rectCount++;
			time=System.currentTimeMillis();
		}
	}
	public void init(){
		super.init();
		s=getS();
		Window w=s.getFullScreenWindow();
		w.setFocusTraversalKeysEnabled(false);
		w.addKeyListener(this);
		trump=new Bird();
		rect=new Rectangle[5];
		for(int i=0;i<5;i++){
			rect[i]=new Rectangle();
		}
		rectCount=0;
		time=System.currentTimeMillis();
		screenLength=s.getHeight();
	}

	@Override
	public void keyTyped(KeyEvent e) {
		
		e.consume();
	}

	@Override
	public void keyPressed(KeyEvent e) {
		int keyCode=e.getKeyCode();
		if(keyCode==KeyEvent.VK_ESCAPE){
			System.exit(0);
		}
		e.consume();
		
	}

	@Override
	public void keyReleased(KeyEvent e) {
		int keyCode=e.getKeyCode();
		if(keyCode==KeyEvent.VK_SPACE){
			trump.setVelocityY(-.4f);;
		}
		e.consume();
		
	}
}
